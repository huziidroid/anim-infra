services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["${POSTGRES_PORT}:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["${REDIS_PORT}:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - redisdata:/data

  # S3-compatible local object store
  minio:
    image: minio/minio:latest
    command: ["server", "/data", "--console-address", ":${MINIO_CONSOLE_PORT}"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:${MINIO_CONSOLE_PORT}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - miniodata:/data

  # Create buckets after MinIO is healthy
  create-buckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    command: >
      mc alias set local http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
      mc mb -p local/${S3_BUCKET_RAW} || true &&
      mc mb -p local/${S3_BUCKET_ASSETS} || true &&
      mc mb -p local/${S3_BUCKET_OUTPUT} || true &&
      mc anonymous set download local/${S3_BUCKET_OUTPUT} || true

  temporal:
    image: temporalio/auto-setup:latest
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["7233:7233"]

  temporal-web:
    image: temporalio/ui:latest # or pin to a real tag, e.g. 2.39.0
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    depends_on:
      temporal:
        condition: service_started
    ports: ["${TEMPORAL_WEB_PORT}:8080"]

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "${MAILHOG_HTTP_PORT}:8025"

volumes:
  pgdata:
  redisdata:
  miniodata:
